import json
import datetime
import requests

SOLCAST_API_KEY = "[Insert your API Key here]"
SOLCAST_API_URL = "https://api.solcast.com.au/rooftop_sites"
SOLCAST_SITE_RESOURCE_ID = "[Insert the resource id of the rooftop_site the measurements are being created for]"


class Measurement:
    """
    To send measurements to the Solcast API, the following attributes need to be present in the payload:
        * period_end: datetime representing the end of the measurement period of time in UTC timezone
        * period: length of the measurement period in ISO86901 format.
        * total_power: the power generated by the rooftop_site over the period
    """
    def __init__(self, period_end: datetime, period: str, total_power: float):
        self.datetime = str(period_end)
        self.period = period
        self.total_power = total_power

    def to_json(self) -> str:
        """
        Converts the measurement object to a json string in the required format for the Solcast API:
        i.e.
        {
            "measurement" : {
                "period_end": "2018-02-02T03:30:00.0000000Z",
                "period" : "PT5M",
                "total_power": 1.2345
            }
        }
        """
        return str.format('{{ "measurement":{} }}', json.dump(self, default=lambda m: m.__dict__))


def add_measurement_to_solcast(measurement: Measurement, resource_id: str) -> requests.Response:
    """
    Using the requests python module, performs a post request with a json payload to the Solcast API.
    :param measurement: the measurement instance to be sent to the Solcast API
    :param resource_id: the resource id of the rooftop_site generating the measurements
    :return: the response of the request
    """
    url = str.format("{}/{}/measurements?format=json&api_key={}", SOLCAST_API_URL, resource_id, SOLCAST_API_KEY)
    response = requests.post(url=url, data=measurement.to_json(), headers={"Content-Type": "application/json"})
    return response


def main():
    measurement = Measurement(datetime.datetime(2018, 2, 2, 3, 30, 0), "PT5M", 1.2345)
    add_measurement_to_solcast(measurement, SOLCAST_SITE_RESOURCE_ID)
